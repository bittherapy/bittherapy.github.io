<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GDB on { bit.therapy }</title>
    <link>/tags/gdb/</link>
    <description>Recent content in GDB on { bit.therapy }</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>_</copyright>
    <lastBuildDate>Fri, 29 Jan 2016 20:23:07 +0000</lastBuildDate>
    
	<atom:link href="/tags/gdb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making gdb More Useful For Reversing</title>
      <link>/post/making-gdb-useful-for-reversing/</link>
      <pubDate>Fri, 29 Jan 2016 20:23:07 +0000</pubDate>
      
      <guid>/post/making-gdb-useful-for-reversing/</guid>
      <description>Unless you&amp;rsquo;re using something like DDD or Gdbinit, gdb vanilla is pretty hard to work with when reversing binaries.
The following is a bunch of display commands that gdb will execute after every &amp;lsquo;step&amp;rsquo;; put them in a file called gdb.cmd somewhere in ~/:
# cat ~/gdb.cmd set disassembly-flavor intel display/10i $eip display/x $eax display/x $ebx display/x $ecx display/x $edx display/x $edi display/x $esi display/x $ebp display/16xw $esp break main  Now you can use the -x gdb commandline parameter and running a program with start or run will show the following:</description>
    </item>
    
  </channel>
</rss>